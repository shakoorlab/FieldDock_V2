.row-column-grid {
  display: grid;
  width: 81vw;
  height: 100%;
  grid-gap: 2.5rem; /* This sets both row-gap and column-gap */
  grid-row-gap: 3rem;
  grid-template-rows: auto auto; /* Adjust the row sizes based on content */
  grid-template-columns: repeat(3, 1fr); /* Three equal columns */
  align-content: start;
  margin: auto; /* Centers the grid horizontally */
}

.row-menu-parent {
  display: flex;
  flex-direction: column; /* Ensures children are stacked vertically */
  justify-content: flex-start; /* Aligns children to the start along the main axis */
  align-items: flex-start; /* Aligns children to the start of the cross axis */
  height: 40%;
  width: 100%;
}

.menu-fill {
  border: 1px solid rgba(0, 168, 177, 0.65);
  border-radius: 4px;
  box-shadow: 0 7px 5px 1px rgba(0, 0, 0, 0.2);
  background: linear-gradient(1deg, rgba(0, 0, 0, 0), #1b1b1b);
  width: 100%;
  height: 100%;
  padding: 0.5em;
  border-radius: 4px;
  color: #ececed;
  font-size: 0.9rem;
}

.column {
  display: flex;
  flex-direction: column;
  height: 100%; /* Ensure the column takes the full height of its container */
}

.middle,
.bottom {
  display: flex;
  align-items: center; /* Center content vertically */
  justify-content: center; /* Center content horizontally */
}

.top {
  display: flex;
  flex-direction: column; /* Stack children vertically */
  justify-content: flex-start; /* Align children to start at the top */
  align-items: center; /* Center children horizontally */
  height: 20%; /* Adjust based on your design */
  width: 100%; /* Adjust based on your design */
}

.top-centered-row-container {
  position: relative;
  display: flex;
  justify-content: center; /* Center the .inner-content div horizontally */
  align-items: center; /* Center the .inner-content div vertically, but it starts at the top due to parent styling */
  width: 100%;
  height: 80%;
  border: 0.5px solid #474a4e;
  border-radius: 4px;
  background: linear-gradient(1deg, rgba(0, 0, 0, 0), #1b1b1b);
}

.top-inner-content {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 10px;
}

.middle {
  height: 60%;
}

.drone-page-img {
  width: 80%;
  height: 80%;
}

.bottom {
  display: flex;
  flex-direction: column; /* Stack children vertically */
  justify-content: flex-end; /* Align children to start at the top */
  align-items: center; /* Center children horizontally */
  height: 20%; /* Adjust based on your design */
  width: 100%; /* Adjust based on your design */
}

.bottom-centered-row-container {
  position: relative;
  display: flex;
  justify-content: center; /* Center the .inner-content div horizontally */
  align-items: center; /* Center the .inner-content div vertically, but it starts at the top due to parent styling */
  width: 100%;
  height: 85%;
  border: 0.5px solid #474a4e;
  border-radius: 4px;
  background: linear-gradient(1deg, rgba(0, 0, 0, 0), #1b1b1b);
}

.bottom-inner-content {
  display: flex;
  width: 90%; /* Ensure the container takes the full width of its parent */
  padding: 0; /* Adjust or remove padding as necessary */
  margin-top: 10px;
}

.input-group-input,
.rename-drone-button {
  flex-grow: 1; /* Allow both elements to grow and fill the container */
  margin: 0 10px; /* Adjust margin for spacing, reducing it to ensure full width utilization */
}

.input-group-input {
  width: 100%; /* Set a fixed width */
  height: 35px; /* Set a fixed height */
  text-align: center;
  border-radius: 4px;
  border: 0.5px solid #474a4e;
  background-color: transparent;
  margin: 0 8px; /* Add some space between elements */
  font-size: 0.75rem;
  flex-basis: 0; /* Start with 0 width before growing */
  flex-grow: 3;
}

.rename-drone-button {
  width: 45%;
  cursor: pointer;
  flex-basis: 0;
  border: 1px solid #48f7f5;
  color: #48f7f5;
  font-weight: bold;
  text-align: center;
  border-radius: 4px; /* Optional: Adds rounded corners to the button */
  padding: 10px 0; /* Adjust padding to vertically center text, if necessary */
  background-color: transparent; /* Optional: Set background color */
}
